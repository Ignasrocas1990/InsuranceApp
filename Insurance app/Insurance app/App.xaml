<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:Class="Insurance_app.App">
    <Application.Resources>
        <ResourceDictionary>
            <!-- colors -->
            <Color x:Key="StrongColor">Orange</Color>
            <Color x:Key="SecondaryColor">DodgerBlue</Color>
            <Color x:Key="ClientBtnColor">Plum</Color>
            <Color x:Key="BackColor">White</Color>
            <Color x:Key="Transparent">Transparent</Color>
            <Color x:Key="ListViewBackColor">Gray</Color>
            <!-- indicator -->
            <Style x:Key="NormalCircularWait" TargetType="ActivityIndicator" >
                <Setter Property="HorizontalOptions" Value="Center"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="Color" Value="{StaticResource StrongColor}"/>
            </Style>
            <!-- buttons -->
            <Style x:Key="BasicBtn" TargetType="Button">
                <Setter Property="TextTransform" Value="None"/>
                <Setter Property="CornerRadius" Value="10"/>
                <Setter Property="TextColor" Value="{StaticResource BackColor}"/>
            </Style>
            
            <Style x:Key="PrimaryBtn" TargetType="Button"
                   BasedOn="{StaticResource BasicBtn}">
                <Setter Property="BackgroundColor" Value="ForestGreen"/>              
            </Style>
            
            <Style x:Key="SecondaryBtn" TargetType="Button"
                   BasedOn="{StaticResource BasicBtn}">
                <Setter Property="BackgroundColor" Value="{StaticResource  SecondaryColor}"/>
            </Style>
            <Style x:Key="SmallBtn" TargetType="Button">
                <Setter Property="BackgroundColor" Value="{StaticResource  SecondaryColor}"/>
                <Setter Property="TextColor" Value="White"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="HorizontalOptions" Value="Start"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="WidthRequest" Value="36"/>
                <Setter Property="HeightRequest" Value="36"/>
                <Setter Property="CornerRadius" Value="400"/>
                
            </Style>
            
            <!-- Labels -->
            <Style x:Key="BasicLabel" TargetType="Label">
                <Setter Property="TextColor" Value="Black"/>
                <Setter Property="BackgroundColor" Value="{ StaticResource Transparent}"/>
            </Style>
            <Style x:Key="NormalLabel" TargetType="Label" BasedOn="{StaticResource BasicLabel}">
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            <Style x:Key="EndLabel" TargetType="Label" BasedOn="{StaticResource NormalLabel}">
                <Setter Property="HorizontalTextAlignment" Value="End" />
            </Style>
            
            <Style x:Key="InfoHLabel" TargetType="Label" BasedOn="{StaticResource BasicLabel}">
                <Setter Property="FontAttributes" Value="Bold"/>
                <Setter Property="VerticalTextAlignment" Value="Center"/>
                <Setter Property="HorizontalTextAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="15"/>
            </Style>
            <Style x:Key="InfoDetailLabel" TargetType="Label" BasedOn="{StaticResource BasicLabel}">
                <Setter Property="FontAttributes" Value="Italic"/>
                <Setter Property="FontSize" Value="15"/>
            </Style>
            <Style x:Key="EClaimsEndLabel" TargetType="Label" BasedOn="{StaticResource InfoDetailLabel}">
                <Setter Property="HorizontalTextAlignment" Value="End"/>
            </Style>
           
            <!-- Entry -->
            <Style x:Key="NormalEntry" TargetType="Entry">
                <Setter Property="IsTextPredictionEnabled" Value="True"/>
                <Setter Property="IsSpellCheckEnabled" Value="True"/>
                <Setter Property="TextColor" Value="Black"/>
                <Setter Property="BackgroundColor" Value="{StaticResource BackColor}"/>
                <Setter Property="PlaceholderColor" Value="Gray" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            <Style x:Key="InvalidEntry" TargetType="Entry" BasedOn="{StaticResource NormalEntry}">
                <Setter Property="TextColor" Value="Red"/>
            </Style>
            <Style x:Key="ValidEntry" TargetType="Entry">
                <Setter Property="TextColor" Value="Black"/>
            </Style>
            
            <!-- picker -->
            <Style x:Key="NormalPicker" TargetType="Picker">
                <Setter Property="TextColor" Value="Black"/>
                <Setter Property="BackgroundColor" Value="{StaticResource Transparent}"/>
                <Setter Property="VerticalTextAlignment" Value="Center" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            
            <!-- Fame  -->
            <Style x:Key="ViewModelFrame" TargetType="Frame">
                <Setter Property="CornerRadius" Value="20"/>
                <Setter Property="HasShadow" Value="True"/>
            </Style>
            
            <!-- ListView  -->
            <Style x:Key="ListView" TargetType="ListView">
                <Setter Property="BackgroundColor" Value="{StaticResource ListViewBackColor}"/>
                <Setter Property="SeparatorVisibility" Value="None"/>
                <Setter Property="HasUnevenRows" Value="True"/>
                <Setter Property="VerticalOptions" Value="Center"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
            </Style>
            
            <!-- Popup  -->
            <Style x:Key="Popup" TargetType="xct:Popup">
                <Setter Property="xct:CornerRadiusEffect.CornerRadius" Value="20"/>
                <Setter Property="BackgroundColor" Value="{StaticResource BackColor}"/>
            </Style>
            
            <!-- Inverters    -->
            <xct:InvertedBoolConverter x:Key="InvertedBoolConverter"/>
            <xct:ItemSelectedEventArgsConverter x:Key="ItemSelectedEventArgsConverter"/>
            
            <ControlTemplate x:Key="LoaderViewTemplate">
                <AbsoluteLayout Padding = "0" VerticalOptions="FillAndExpand" HorizontalOptions="FillAndExpand">
                    <ContentPresenter AbsoluteLayout.LayoutBounds="1,1,1,1" AbsoluteLayout.LayoutFlags="All"/>
                    <ActivityIndicator Color= "{StaticResource StrongColor}" IsRunning= "{TemplateBinding RootViewModel.SetUpWaitDisplay}" AbsoluteLayout.LayoutBounds=".5,.5,100,100" AbsoluteLayout.LayoutFlags="PositionProportional" />
                    <ActivityIndicator Color= "{StaticResource StrongColor}" IsRunning= "{TemplateBinding RootViewModel.CircularWaitDisplay}" AbsoluteLayout.LayoutBounds=".5,.5,100,100" AbsoluteLayout.LayoutFlags="PositionProportional" />
                </AbsoluteLayout>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>