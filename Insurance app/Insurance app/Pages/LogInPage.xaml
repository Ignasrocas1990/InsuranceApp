<?xml version="1.0" encoding="utf-8"?>

<pages:LoadingPage xmlns="http://xamarin.com/schemas/2014/forms"
                   xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                   xmlns:viewModels1="clr-namespace:Insurance_app.ViewModels"
                   xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
                   xmlns:pages="clr-namespace:Insurance_app.Pages;assembly=Insurance app"
                   x:DataType="viewModels1:LogInViewModel"
                   Shell.FlyoutBehavior="Disabled"
                   IsTabStop="True"
                   Title="Welcome to Dynamic Insurance"
                   BackgroundColor="{StaticResource BackColor}"
                   RootViewModel="{Binding .}"
                   ControlTemplate="{StaticResource LoaderViewTemplate}"
                   x:Class="Insurance_app.Pages.LogInPage">
    
    <Grid VerticalOptions="CenterAndExpand" RowSpacing="20" ColumnSpacing="20" Padding="40">
        
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="2*"/>
            
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="5*"/>
        </Grid.ColumnDefinitions>
        
        <Entry Text="{Binding EmailDisplay}" Placeholder="email@gmail.com" HorizontalTextAlignment="Center"
               Keyboard="Plain" Style="{StaticResource NormalEntry}"
               IsVisible="{Binding SetUpWaitDisplay ,Converter={StaticResource InvertedBoolConverter}}"
               Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2">
            <Entry.Behaviors>
                <xct:EmailValidationBehavior ValidStyle="{StaticResource NormalEntry}" IsValid="{Binding EmailIsValid}"
                                             InvalidStyle="{StaticResource InvalidEntry}" Flags="ValidateOnValueChanging"/> 
            </Entry.Behaviors>
        </Entry>
        
        <Entry Text= "{Binding PasswordDisplay}" Placeholder="password" HorizontalTextAlignment="Center"
               IsPassword="True" Keyboard="Plain" Style="{StaticResource NormalEntry}"
               IsVisible="{Binding SetUpWaitDisplay ,Converter={StaticResource InvertedBoolConverter}}"
               Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2">
            <Entry.Behaviors>
                <xct:MultiValidationBehavior ValidStyle="{StaticResource NormalEntry}"
                                             IsValid="{Binding PassIsValid}"
                                             Flags="ValidateOnValueChanging"
                                             InvalidStyle="{StaticResource InvalidEntry}">
                    <xct:TextValidationBehavior MinimumLength="6" />
                    <xct:CharactersValidationBehavior CharacterType="Digit" MinimumCharacterCount="1"  />
                    <xct:CharactersValidationBehavior CharacterType="LowercaseLetter" MinimumCharacterCount="1"/>
                    <xct:CharactersValidationBehavior CharacterType="UppercaseLetter" MinimumCharacterCount="1"/>
                    <xct:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MinimumCharacterCount="1" />
                    <xct:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterCount="0" />
                </xct:MultiValidationBehavior>
            </Entry.Behaviors>
        </Entry>
        
        <Button Text="Log In" IsEnabled="{Binding CircularWaitDisplay,Converter={StaticResource InvertedBoolConverter}}"
                Command="{Binding LogInCommand}" HorizontalOptions="Fill" Style="{StaticResource PrimaryBtn}"
                IsVisible="{Binding SetUpWaitDisplay ,Converter={StaticResource InvertedBoolConverter}}"
                Grid.Column="1" Grid.Row="2"/>
        <Button  Text="Client Reg." IsEnabled="{Binding CircularWaitDisplay,Converter={StaticResource InvertedBoolConverter}}"
                 Command="{Binding ClientRegCommand}" HorizontalOptions="Fill" Style="{StaticResource SecondaryBtn}"
                 IsVisible="{Binding SetUpWaitDisplay ,Converter={StaticResource InvertedBoolConverter}}"
                 BackgroundColor="{StaticResource ClientBtnColor}"
                 Grid.Column="0" Grid.Row="2"/>
        
        <Button Text="Get a Quote" IsEnabled="{Binding CircularWaitDisplay,Converter={StaticResource InvertedBoolConverter}}"
                Command="{Binding QuoteCommand}" HorizontalOptions="Fill" Style="{StaticResource SecondaryBtn}" 
                IsVisible="{Binding SetUpWaitDisplay ,Converter={StaticResource InvertedBoolConverter}}"
                Grid.Column="0" Grid.Row="3" Grid.ColumnSpan="2"/>
        
        
        <ActivityIndicator IsRunning="{Binding SetUpWaitDisplay}" 
                           Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
                           Style="{StaticResource NormalCircularWait}" />
        
    </Grid>
    
    
        
</pages:LoadingPage>