<?xml version="1.0" encoding="utf-8"?>

<pages1:LoadingPage  xmlns:pages1="clr-namespace:Insurance_app.Pages"
                     xmlns="http://xamarin.com/schemas/2014/forms"
                   xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                   xmlns:viewModels1="clr-namespace:Insurance_app.ViewModels"
                   xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
                     x:DataType="viewModels1:RegistrationViewModel"
                   Shell.FlyoutBehavior="Disabled"
                   Title="Customer Registration"
                   BackgroundColor="{StaticResource BackColor}"
                   RootViewModel="{Binding .}"
                   ControlTemplate="{StaticResource LoaderViewTemplate}"
                   x:Class="Insurance_app.Pages.RegistrationPage">
    
    <Grid VerticalOptions="CenterAndExpand" RowSpacing="20" ColumnSpacing="5" Padding="40"
          RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto,*" ColumnDefinitions="5*,5*"   >
        
                
              <Label Text="Email :" Style="{StaticResource EndLabel}" Grid.Column="0" Grid.Row="0" />
              <Entry  Keyboard="Email" Text="{Binding EmailDisplay}" 
                      Placeholder="__@__.com"
                      Style="{StaticResource NormalEntry}"
                      Grid.Column="1" Grid.Row="0">
                  <Entry.Behaviors>
                      <xct:EmailValidationBehavior ValidStyle="{StaticResource NormalEntry}" 
                                                   DecorationFlags="TrimEnd" x:Name="EmailValidation"
                                                   InvalidStyle="{StaticResource InvalidEntry}" Flags="ValidateOnValueChanging"/> 
                  </Entry.Behaviors>
              </Entry>
                
              <Label Text="Password :" Style="{StaticResource EndLabel}" Grid.Column="0" Grid.Row="1" />
              <Entry  Text="{Binding PassDisplay}" 
                      Placeholder="*********" IsPassword="True"
                      Style="{StaticResource NormalEntry}"
                      Grid.Column="1" Grid.Row="1">
                  <Entry.Behaviors>
                      <xct:MultiValidationBehavior ValidStyle="{StaticResource NormalEntry}"
                                                         Flags="ValidateOnValueChanging" x:Name="PasswordValidator"
                                                         InvalidStyle="{StaticResource InvalidEntry}">
                          <xct:TextValidationBehavior MinimumLength="6" xct:MultiValidationBehavior.Error="Password must have at least 6 chars" />
                          <xct:CharactersValidationBehavior CharacterType="Digit" MinimumCharacterCount="1" xct:MultiValidationBehavior.Error="Password needs 1 digit" />
                          <xct:CharactersValidationBehavior CharacterType="LowercaseLetter" MinimumCharacterCount="1" xct:MultiValidationBehavior.Error="Password needs 1 lower case char"/>
                          <xct:CharactersValidationBehavior CharacterType="UppercaseLetter" MinimumCharacterCount="1" xct:MultiValidationBehavior.Error="Password needs 1 upper case char"/>
                          <xct:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MinimumCharacterCount="1" xct:MultiValidationBehavior.Error="Password needs special char" />
                          <xct:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="Password Has spaces" />
                      </xct:MultiValidationBehavior>
                  </Entry.Behaviors>
              </Entry>
                
              <Label Text="First Name :" Style="{StaticResource EndLabel}" Grid.Column="0" Grid.Row="2" />
              <Entry Keyboard="Text" Text="{Binding FNameDisplay}"
                     Placeholder="Jonny" Style="{StaticResource NormalEntry}"
                     Grid.Column="1" Grid.Row="2">
                  <Entry.Behaviors>
                      <xct:MultiValidationBehavior ValidStyle="{StaticResource NormalEntry}" 
                                                   Flags="ValidateOnValueChanging" x:Name="NameValidator"
                                                   InvalidStyle="{StaticResource InvalidEntry}">
                          <xct:TextValidationBehavior MinimumLength="3" MaximumLength="20" xct:MultiValidationBehavior.Error="3 &lt; F.Name &lt; 20 length" />
                          <xct:CharactersValidationBehavior CharacterType="Digit" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="Name has digits" />
                          <xct:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="Name has Special characters" />
                          <xct:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="Name has spaces" DecorationFlags="TrimEnd" />
                      </xct:MultiValidationBehavior>
                  </Entry.Behaviors>
              </Entry>
                
              <Label Text="Last Name :" Style="{StaticResource EndLabel}" Grid.Column="0" Grid.Row="3" />
              <Entry Keyboard="Text" Text="{Binding LNameDisplay}" 
                     Placeholder="Bravo" Style="{StaticResource NormalEntry}"
                     Grid.Column="1" Grid.Row="3">
                  <Entry.Behaviors>
                      <xct:MultiValidationBehavior ValidStyle="{StaticResource NormalEntry}" 
                                                   Flags="ValidateOnValueChanging" x:Name="LNameValidator"
                                                   InvalidStyle="{StaticResource InvalidEntry}">
                          <xct:TextValidationBehavior MinimumLength="3" MaximumLength="20" xct:MultiValidationBehavior.Error="3 &lt; L.Name &lt; 20 in length" />
                          <xct:CharactersValidationBehavior CharacterType="Digit" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="L.Name has digits" />
                          <xct:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="L.Name has Special chars" />
                          <xct:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterCount="0" xct:MultiValidationBehavior.Error="L.Name has spaces" />
                      </xct:MultiValidationBehavior>
                  </Entry.Behaviors>
              </Entry>
                
              <Label Text="Phone Nr :" Style="{StaticResource EndLabel}" Grid.Column="0" Grid.Row="4" />
              <Entry  Keyboard="Numeric" Text="{Binding PhoneNrDisplay}"
                      Placeholder= "only numbers" Style="{StaticResource NormalEntry}"
                      Grid.Column="1" Grid.Row="4">
                  <Entry.Behaviors>
                  <xct:MultiValidationBehavior ValidStyle="{StaticResource NormalEntry}" 
                                               Flags="ValidateOnValueChanging" x:Name="PhoneNrValidator"
                                               InvalidStyle="{StaticResource InvalidEntry}">
                      <xct:TextValidationBehavior MinimumLength="8" MaximumLength="20" 
                                                  xct:MultiValidationBehavior.Error="8 &lt; PhoneNr &lt; 20 in length" />
                      <xct:CharactersValidationBehavior CharacterType="Whitespace" MaximumCharacterCount="0" 
                                                        xct:MultiValidationBehavior.Error="PhoneNr has spaces" DecorationFlags="TrimEnd" />
                      <xct:CharactersValidationBehavior CharacterType="NonAlphanumericSymbol" MaximumCharacterCount="0" 
                                                        xct:MultiValidationBehavior.Error="PhoneNr special char's" DecorationFlags="TrimEnd" />
                  </xct:MultiValidationBehavior>
                  </Entry.Behaviors>
              </Entry>
              
              <Button Command="{Binding AddressCommand}" x:Name="AddressValidator"
                      Text="{Binding AddressDisplay}" Style="{StaticResource WhiteBtn}"
                      IsEnabled="{Binding CircularWaitDisplay,Converter={StaticResource InvertedBoolConverter}}"
                      Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" />
              
              <Button Text="Register" Clicked="Button_OnClicked"
                      Style="{StaticResource PrimaryBtn}"
                      IsEnabled="{Binding CircularWaitDisplay,Converter={StaticResource InvertedBoolConverter}}"
                      Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="2" HorizontalOptions="Center" />
    </Grid>           

</pages1:LoadingPage>